
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ELSE ELSEIF ENDFOR ENDIF FOR ID IF TEXTODoc : RulesRules : Rules : Rules RuleRule : StmtRule : TEXTOStmt : IF '(' Cond ')' Rules Elseif ENDIFStmt : FOR '(' Var ')' Rules ENDFORStmt : VarElseif : Elseif ELSEIF '(' Cond ')' Rules ElseElseif : Else : ELSE RulesElse : Cond : VarVar : Var '.' IDVar : ID"
    
_lr_action_items = {'TEXTO':([0,2,3,4,5,8,9,16,17,18,19,20,22,23,27,28,30,31,],[-2,5,-3,-4,-5,-8,-15,-14,-2,-2,5,5,-7,-6,-2,5,-2,5,]),'IF':([0,2,3,4,5,8,9,16,17,18,19,20,22,23,27,28,30,31,],[-2,6,-3,-4,-5,-8,-15,-14,-2,-2,6,6,-7,-6,-2,6,-2,6,]),'FOR':([0,2,3,4,5,8,9,16,17,18,19,20,22,23,27,28,30,31,],[-2,7,-3,-4,-5,-8,-15,-14,-2,-2,7,7,-7,-6,-2,7,-2,7,]),'ID':([0,2,3,4,5,8,9,10,11,12,16,17,18,19,20,22,23,25,27,28,30,31,],[-2,9,-3,-4,-5,-8,-15,9,9,16,-14,-2,-2,9,9,-7,-6,9,-2,9,-2,9,]),'$end':([0,1,2,3,4,5,8,9,16,22,23,],[-2,0,-1,-3,-4,-5,-8,-15,-14,-7,-6,]),'ENDIF':([3,4,5,8,9,16,17,19,21,22,23,27,28,29,30,31,],[-3,-4,-5,-8,-15,-14,-2,-10,23,-7,-6,-2,-12,-9,-2,-11,]),'ELSEIF':([3,4,5,8,9,16,17,19,21,22,23,27,28,29,30,31,],[-3,-4,-5,-8,-15,-14,-2,-10,24,-7,-6,-2,-12,-9,-2,-11,]),'ENDFOR':([3,4,5,8,9,16,18,20,22,23,],[-3,-4,-5,-8,-15,-14,-2,22,-7,-6,]),'ELSE':([3,4,5,8,9,16,22,23,27,28,],[-3,-4,-5,-8,-15,-14,-7,-6,-2,30,]),'(':([6,7,24,],[10,11,25,]),'.':([8,9,14,15,16,],[12,-15,12,12,-14,]),')':([9,13,14,15,16,26,],[-15,17,-13,18,-14,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Doc':([0,],[1,]),'Rules':([0,17,18,27,30,],[2,19,20,28,31,]),'Rule':([2,19,20,28,31,],[3,3,3,3,3,]),'Stmt':([2,19,20,28,31,],[4,4,4,4,4,]),'Var':([2,10,11,19,20,25,28,31,],[8,14,15,8,8,14,8,8,]),'Cond':([10,25,],[13,26,]),'Elseif':([19,],[21,]),'Else':([28,],[29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Doc","S'",1,None,None,None),
  ('Doc -> Rules','Doc',1,'p_Doc','pandoc_par.py',15),
  ('Rules -> <empty>','Rules',0,'p_Rules_a','pandoc_par.py',19),
  ('Rules -> Rules Rule','Rules',2,'p_Rules_b','pandoc_par.py',23),
  ('Rule -> Stmt','Rule',1,'p_Rule_a','pandoc_par.py',27),
  ('Rule -> TEXTO','Rule',1,'p_Rule_b','pandoc_par.py',31),
  ('Stmt -> IF ( Cond ) Rules Elseif ENDIF','Stmt',7,'p_Stmt_a','pandoc_par.py',35),
  ('Stmt -> FOR ( Var ) Rules ENDFOR','Stmt',6,'p_Stmt_b','pandoc_par.py',39),
  ('Stmt -> Var','Stmt',1,'p_Stmt_c','pandoc_par.py',43),
  ('Elseif -> Elseif ELSEIF ( Cond ) Rules Else','Elseif',7,'p_elseif_a','pandoc_par.py',47),
  ('Elseif -> <empty>','Elseif',0,'p_elseif_b','pandoc_par.py',51),
  ('Else -> ELSE Rules','Else',2,'p_else_a','pandoc_par.py',55),
  ('Else -> <empty>','Else',0,'p_else_b','pandoc_par.py',59),
  ('Cond -> Var','Cond',1,'p_Cond_a','pandoc_par.py',63),
  ('Var -> Var . ID','Var',3,'p_Var_a','pandoc_par.py',67),
  ('Var -> ID','Var',1,'p_Var_b','pandoc_par.py',71),
]
