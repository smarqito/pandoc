Document -> Elems

Elems   ->  Elems Elem
Elems   |   Elem

Elem    ->  Stmt
        |   Var
        |   It
        |   TEXT

###############################################
#                  Stmt                       #
###############################################

Stmt    ->  If
        |  For
        |  Subtemplate

Subtemplate -> Var OPAR CPAR
            | Var COLON Var OPAR CPAR  

For     -> FOR OPAR Cond CPAR Elems Sep ENDFOR                                               : StmtFor (Cond, Elems) 

Sep     -> SEP TEXT
        | Empty

If      ->  IF OPAR Cond CPAR Elems Else ENDIF
                                      | None                                             : StmtIf
                                      | ('else', elems, )                                : StmtIfElse
                                      | ('elseIf', elseIfs, elseBody : Elems | None)     : StmtIfElseIf

Cond    ->  Var

Else                                                ([elseifs], [else])
Else    ->  ELSE Elems                              ([], elem)
        |   ElseIf Else                             (p[1] + p[2][0], p[2][1])
        |   Empty                                   ([], [])


ElseIf  ->  ELSEIF OPAR Cond CPAR Elems             [StmtIf]


###############################################
#                  Vars                       #
###############################################

It      -> IT ItOpt

ItOpt   ->  COLON Subtemplate                       Subtemplate()
        |   DOT Var                                 ItVar(p[2].getKeywords())
        |   OSQBRAC NUM COMMA NUM CSQBRAC           ItRange(p[2], p[4])
        |                                           It()

Var     ->  Var DOT ID                              p[1].add(p[2])
        |   ID                                      Var(p[1])

###############################################
#                  LIXO                       #
###############################################

# Novo contexto no lexers
# Necessidade criar esta producao para as vars nas condicoes 
# nao rebentar; se nao existe da false
CondVar ->  CondVar . CID                            p[1].add(p[2])
        |   CID                                      CondVar(p[1])
        
$if (var)$
... $var$ ...
$endif$